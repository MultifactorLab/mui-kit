/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-xs: var(--mui-border-radius-xs);
    --radius-sm: var(--mui-border-radius-sm);
    --radius-md: var(--mui-border-radius-md);
    --radius-lg: var(--mui-border-radius-lg);
    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --radius: var(--mui-border-radius);
    --color-mui-primary-500: var(--mui-color-primary-500);
    --color-mui-secondary-500: var(--mui-color-secondary-500);
    --color-mui-success-500: var(--mui-color-success-500);
    --color-mui-danger-500: var(--mui-color-danger-500);
    --color-mui-warning-500: var(--mui-color-warning-500);
    --color-mui-info-500: var(--mui-color-info-500);
    --background-color-mui-primary-50: var(--mui-bg-color-primary-50);
    --background-color-mui-primary-500: var(--mui-bg-color-primary-500);
    --background-color-mui-secondary-500: var(--mui-bg-color-secondary-500);
    --background-color-mui-secondary-700: var(--mui-bg-color-secondary-700);
    --background-color-mui-success-500: var(--mui-bg-color-success-500);
    --background-color-mui-success-700: var(--mui-bg-color-success-700);
    --background-color-mui-danger-500: var(--mui-bg-color-danger-500);
    --background-color-mui-danger-700: var(--mui-bg-color-danger-700);
    --background-color-mui-warning-500: var(--mui-bg-color-warning-500);
    --background-color-mui-warning-700: var(--mui-bg-color-warning-700);
    --background-color-mui-info-500: var(--mui-bg-color-info-500);
    --background-color-mui-info-700: var(--mui-bg-color-info-700);
    --spacing-1: var(--mui-spacing-1);
    --spacing-2: var(--mui-spacing-2);
    --spacing-3: var(--mui-spacing-3);
    --spacing-4: var(--mui-spacing-4);
    --spacing-5: var(--mui-spacing-5);
    --spacing-6: var(--mui-spacing-6);
    --spacing-11: var(--mui-spacing-11);
    --spacing-0_5: var(--mui-spacing-0_5);
    --spacing-1_5: var(--mui-spacing-1_5);
    --spacing-2_5: var(--mui-spacing-2_5);
    --border-width-2: var(--mui-border-width-2);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .relative {
    position: relative;
  }
  .mx-0 {
    margin-inline: calc(var(--spacing) * 0);
  }
  .my-1 {
    margin-block: var(--spacing-1);
  }
  .ml-3 {
    margin-left: var(--spacing-3);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .h-full {
    height: 100%;
  }
  .min-h-1\.5 {
    min-height: var(--spacing-1_5);
  }
  .min-h-2\.5 {
    min-height: var(--spacing-2_5);
  }
  .min-h-4 {
    min-height: var(--spacing-4);
  }
  .min-h-5 {
    min-height: var(--spacing-5);
  }
  .min-h-6 {
    min-height: var(--spacing-6);
  }
  .w-full {
    width: 100%;
  }
  .min-w-11 {
    min-width: var(--spacing-11);
  }
  .flex-1 {
    flex: 1;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-none {
    animation: none;
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: var(--spacing-1);
  }
  .gap-2 {
    gap: var(--spacing-2);
  }
  .gap-4 {
    gap: var(--spacing-4);
  }
  .gap-x-1 {
    column-gap: var(--spacing-1);
  }
  .gap-x-2 {
    column-gap: var(--spacing-2);
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(var(--spacing-2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(var(--spacing-2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .rounded {
    border-radius: var(--radius);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xs {
    border-radius: var(--radius-xs);
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: var(--border-width-2);
  }
  .border-blue-500 {
    border-color: var(--color-blue-500);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\/30 {
    background-color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-mui-danger-500 {
    background-color: var(--background-color-mui-danger-500);
  }
  .bg-mui-danger-500\/10 {
    background-color: var(--background-color-mui-danger-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--background-color-mui-danger-500) 10%, transparent);
    }
  }
  .bg-mui-info-500 {
    background-color: var(--background-color-mui-info-500);
  }
  .bg-mui-info-500\/10 {
    background-color: var(--background-color-mui-info-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--background-color-mui-info-500) 10%, transparent);
    }
  }
  .bg-mui-primary-50 {
    background-color: var(--background-color-mui-primary-50);
  }
  .bg-mui-primary-500 {
    background-color: var(--background-color-mui-primary-500);
  }
  .bg-mui-primary-500\/10 {
    background-color: var(--background-color-mui-primary-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--background-color-mui-primary-500) 10%, transparent);
    }
  }
  .bg-mui-primary-500\/20 {
    background-color: var(--background-color-mui-primary-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--background-color-mui-primary-500) 20%, transparent);
    }
  }
  .bg-mui-secondary-500 {
    background-color: var(--background-color-mui-secondary-500);
  }
  .bg-mui-secondary-500\/10 {
    background-color: var(--background-color-mui-secondary-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--background-color-mui-secondary-500) 10%, transparent);
    }
  }
  .bg-mui-success-500 {
    background-color: var(--background-color-mui-success-500);
  }
  .bg-mui-success-500\/10 {
    background-color: var(--background-color-mui-success-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--background-color-mui-success-500) 10%, transparent);
    }
  }
  .bg-mui-warning-500 {
    background-color: var(--background-color-mui-warning-500);
  }
  .bg-mui-warning-500\/10 {
    background-color: var(--background-color-mui-warning-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--background-color-mui-warning-500) 10%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/30 {
    background-color: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .px-1 {
    padding-inline: var(--spacing-1);
  }
  .px-1\.5 {
    padding-inline: var(--spacing-1_5);
  }
  .px-2 {
    padding-inline: var(--spacing-2);
  }
  .px-4 {
    padding-inline: var(--spacing-4);
  }
  .px-6 {
    padding-inline: var(--spacing-6);
  }
  .py-0\.5 {
    padding-block: var(--spacing-0_5);
  }
  .py-1 {
    padding-block: var(--spacing-1);
  }
  .py-2 {
    padding-block: var(--spacing-2);
  }
  .py-3 {
    padding-block: var(--spacing-3);
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-mui-danger-500 {
    color: var(--color-mui-danger-500);
  }
  .text-mui-info-500 {
    color: var(--color-mui-info-500);
  }
  .text-mui-primary-500 {
    color: var(--color-mui-primary-500);
  }
  .text-mui-secondary-500 {
    color: var(--color-mui-secondary-500);
  }
  .text-mui-success-500 {
    color: var(--color-mui-success-500);
  }
  .text-mui-warning-500 {
    color: var(--color-mui-warning-500);
  }
  .text-white {
    color: var(--color-white);
  }
  .opacity-50 {
    opacity: 50%;
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .peer-checked\:bg-black {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-black);
    }
  }
  .peer-checked\:bg-mui-danger-500 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--background-color-mui-danger-500);
    }
  }
  .peer-checked\:bg-mui-info-500 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--background-color-mui-info-500);
    }
  }
  .peer-checked\:bg-mui-primary-500 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--background-color-mui-primary-500);
    }
  }
  .peer-checked\:bg-mui-secondary-500 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--background-color-mui-secondary-500);
    }
  }
  .peer-checked\:bg-mui-success-500 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--background-color-mui-success-500);
    }
  }
  .peer-checked\:bg-mui-warning-500 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--background-color-mui-warning-500);
    }
  }
  .peer-checked\:bg-white {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-white);
    }
  }
  .peer-focus\:ring-4 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .peer-focus\:ring-black\/30 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: color-mix(in srgb, #000 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-black) 30%, transparent);
      }
    }
  }
  .peer-focus\:ring-mui-danger-500\/30 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-mui-danger-500);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-mui-danger-500) 30%, transparent);
      }
    }
  }
  .peer-focus\:ring-mui-info-500\/30 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-mui-info-500);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-mui-info-500) 30%, transparent);
      }
    }
  }
  .peer-focus\:ring-mui-primary-500\/30 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-mui-primary-500);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-mui-primary-500) 30%, transparent);
      }
    }
  }
  .peer-focus\:ring-mui-secondary-500\/30 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-mui-secondary-500);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-mui-secondary-500) 30%, transparent);
      }
    }
  }
  .peer-focus\:ring-mui-success-500\/30 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-mui-success-500);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-mui-success-500) 30%, transparent);
      }
    }
  }
  .peer-focus\:ring-mui-warning-500\/30 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-mui-warning-500);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-mui-warning-500) 30%, transparent);
      }
    }
  }
  .peer-focus\:ring-white\/30 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: color-mix(in srgb, #fff 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-white) 30%, transparent);
      }
    }
  }
  .peer-focus\:outline-none {
    &:is(:where(.peer):focus ~ *) {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:inset-0 {
    &::before {
      content: var(--tw-content);
      inset: calc(var(--spacing) * 0);
    }
  }
  .before\:block {
    &::before {
      content: var(--tw-content);
      display: block;
    }
  }
  .before\:size-full {
    &::before {
      content: var(--tw-content);
      width: 100%;
      height: 100%;
    }
  }
  .before\:animate-ping {
    &::before {
      content: var(--tw-content);
      animation: var(--animate-ping);
    }
  }
  .before\:rounded-full {
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .before\:bg-mui-primary-50 {
    &::before {
      content: var(--tw-content);
      background-color: var(--background-color-mui-primary-50);
    }
  }
  .before\:content-\[\'\'\] {
    &::before {
      content: var(--tw-content);
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .before\:animation-delay-150 {
    &::before {
      content: var(--tw-content);
      animation-delay: 150ms;
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:top-1\/2 {
    &::after {
      content: var(--tw-content);
      top: calc(1/2 * 100%);
    }
  }
  .after\:left-\[2px\] {
    &::after {
      content: var(--tw-content);
      left: 2px;
    }
  }
  .after\:h-5 {
    &::after {
      content: var(--tw-content);
      height: var(--spacing-5);
    }
  }
  .after\:w-5 {
    &::after {
      content: var(--tw-content);
      width: var(--spacing-5);
    }
  }
  .after\:-translate-y-1\/2 {
    &::after {
      content: var(--tw-content);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .after\:rounded-full {
    &::after {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .after\:border {
    &::after {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .after\:border-gray-300 {
    &::after {
      content: var(--tw-content);
      border-color: var(--color-gray-300);
    }
  }
  .after\:bg-white {
    &::after {
      content: var(--tw-content);
      background-color: var(--color-white);
    }
  }
  .after\:transition-all {
    &::after {
      content: var(--tw-content);
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .after\:content-\[\"\"\] {
    &::after {
      content: var(--tw-content);
      --tw-content: "";
      content: var(--tw-content);
    }
  }
  .peer-checked\:after\:translate-x-full {
    &:is(:where(.peer):checked ~ *) {
      &::after {
        content: var(--tw-content);
        --tw-translate-x: 100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .first\:before\:animation-delay-none {
    &:first-child {
      &::before {
        content: var(--tw-content);
        animation-delay: 0s;
      }
    }
  }
  .last\:before\:animation-delay-300 {
    &:last-child {
      &::before {
        content: var(--tw-content);
        animation-delay: 300ms;
      }
    }
  }
  .hover\:bg-black\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #000 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-mui-danger-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--background-color-mui-danger-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--background-color-mui-danger-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-mui-danger-500\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--background-color-mui-danger-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--background-color-mui-danger-500) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-mui-info-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--background-color-mui-info-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--background-color-mui-info-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-mui-info-500\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--background-color-mui-info-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--background-color-mui-info-500) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-mui-primary-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--background-color-mui-primary-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--background-color-mui-primary-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-mui-primary-500\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--background-color-mui-primary-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--background-color-mui-primary-500) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-mui-secondary-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--background-color-mui-secondary-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--background-color-mui-secondary-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-mui-secondary-500\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--background-color-mui-secondary-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--background-color-mui-secondary-500) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-mui-success-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--background-color-mui-success-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--background-color-mui-success-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-mui-success-500\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--background-color-mui-success-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--background-color-mui-success-500) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-mui-warning-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--background-color-mui-warning-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--background-color-mui-warning-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-mui-warning-500\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--background-color-mui-warning-500);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--background-color-mui-warning-500) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-white\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
      }
    }
  }
  .active\:bg-black\/60 {
    &:active {
      background-color: color-mix(in srgb, #000 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-black) 60%, transparent);
      }
    }
  }
  .active\:bg-mui-danger-500\/25 {
    &:active {
      background-color: var(--background-color-mui-danger-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--background-color-mui-danger-500) 25%, transparent);
      }
    }
  }
  .active\:bg-mui-danger-500\/60 {
    &:active {
      background-color: var(--background-color-mui-danger-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--background-color-mui-danger-500) 60%, transparent);
      }
    }
  }
  .active\:bg-mui-danger-700 {
    &:active {
      background-color: var(--background-color-mui-danger-700);
    }
  }
  .active\:bg-mui-info-500\/25 {
    &:active {
      background-color: var(--background-color-mui-info-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--background-color-mui-info-500) 25%, transparent);
      }
    }
  }
  .active\:bg-mui-info-500\/60 {
    &:active {
      background-color: var(--background-color-mui-info-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--background-color-mui-info-500) 60%, transparent);
      }
    }
  }
  .active\:bg-mui-info-700 {
    &:active {
      background-color: var(--background-color-mui-info-700);
    }
  }
  .active\:bg-mui-primary-500\/25 {
    &:active {
      background-color: var(--background-color-mui-primary-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--background-color-mui-primary-500) 25%, transparent);
      }
    }
  }
  .active\:bg-mui-primary-500\/60 {
    &:active {
      background-color: var(--background-color-mui-primary-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--background-color-mui-primary-500) 60%, transparent);
      }
    }
  }
  .active\:bg-mui-secondary-500\/25 {
    &:active {
      background-color: var(--background-color-mui-secondary-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--background-color-mui-secondary-500) 25%, transparent);
      }
    }
  }
  .active\:bg-mui-secondary-500\/60 {
    &:active {
      background-color: var(--background-color-mui-secondary-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--background-color-mui-secondary-500) 60%, transparent);
      }
    }
  }
  .active\:bg-mui-secondary-700 {
    &:active {
      background-color: var(--background-color-mui-secondary-700);
    }
  }
  .active\:bg-mui-success-500\/25 {
    &:active {
      background-color: var(--background-color-mui-success-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--background-color-mui-success-500) 25%, transparent);
      }
    }
  }
  .active\:bg-mui-success-500\/60 {
    &:active {
      background-color: var(--background-color-mui-success-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--background-color-mui-success-500) 60%, transparent);
      }
    }
  }
  .active\:bg-mui-success-700 {
    &:active {
      background-color: var(--background-color-mui-success-700);
    }
  }
  .active\:bg-mui-warning-500\/25 {
    &:active {
      background-color: var(--background-color-mui-warning-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--background-color-mui-warning-500) 25%, transparent);
      }
    }
  }
  .active\:bg-mui-warning-500\/60 {
    &:active {
      background-color: var(--background-color-mui-warning-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--background-color-mui-warning-500) 60%, transparent);
      }
    }
  }
  .active\:bg-mui-warning-700 {
    &:active {
      background-color: var(--background-color-mui-warning-700);
    }
  }
  .active\:bg-white\/60 {
    &:active {
      background-color: color-mix(in srgb, #fff 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
      }
    }
  }
  .dark\:border-gray-600 {
    &:is([data-mode="dark"] *) {
      border-color: var(--color-gray-600);
    }
  }
  .dark\:bg-gray-700 {
    &:is([data-mode="dark"] *) {
      background-color: var(--color-gray-700);
    }
  }
  .dark\:text-white {
    &:is([data-mode="dark"] *) {
      color: var(--color-white);
    }
  }
}
:root {
  --mui-color-primary-50: oklch(97.25% 0.01 23.70);
  --mui-color-primary-100: oklch(94.00% 0.03 25.28);
  --mui-color-primary-200: oklch(89.23% 0.06 26.37);
  --mui-color-primary-300: oklch(82.40% 0.10 27.81);
  --mui-color-primary-400: oklch(73.24% 0.16 28.84);
  --mui-color-primary-500: oklch(67.13% 0.19 30.24);
  --mui-color-primary-600: oklch(59.87% 0.21 30.92);
  --mui-color-primary-700: oklch(52.41% 0.19 30.94);
  --mui-color-primary-800: oklch(46.01% 0.16 30.80);
  --mui-color-primary-900: oklch(41.08% 0.13 30.64);
  --mui-color-primary-950: oklch(26.71% 0.09 30.66);
}
:root {
  --mui-color-secondary-50: oklch(97.84% 0.00 197.14);
  --mui-color-secondary-100: oklch(94.92% 0.00 271.37);
  --mui-color-secondary-200: oklch(89.03% 0.01 255.48);
  --mui-color-secondary-300: oklch(78.85% 0.01 266.68);
  --mui-color-secondary-400: oklch(66.84% 0.02 262.97);
  --mui-color-secondary-500: oklch(55.10% 0.02 264.36);
  --mui-color-secondary-600: oklch(49.21% 0.02 265.82);
  --mui-color-secondary-700: oklch(42.48% 0.02 270.90);
  --mui-color-secondary-800: oklch(38.60% 0.01 264.39);
  --mui-color-secondary-900: oklch(34.96% 0.01 274.50);
  --mui-color-secondary-950: oklch(27.28% 0.01 268.32);
}
:root {
  --mui-color-success-50: #f0fdf5;
  --mui-color-success-100: #dcfce8;
  --mui-color-success-200: #bbf7d1;
  --mui-color-success-300: #86efad;
  --mui-color-success-400: #4ade81;
  --mui-color-success-500: #22c55e;
  --mui-color-success-600: #16a34a;
  --mui-color-success-700: #15803c;
  --mui-color-success-800: #166533;
  --mui-color-success-900: #14532b;
  --mui-color-success-950: #052e14;
}
:root {
  --mui-color-danger-50: oklch(96.75% 0.01 17.38);
  --mui-color-danger-100: oklch(92.74% 0.03 17.75);
  --mui-color-danger-200: oklch(87.23% 0.06 18.36);
  --mui-color-danger-300: oklch(78.62% 0.10 19.67);
  --mui-color-danger-400: oklch(67.49% 0.17 22.65);
  --mui-color-danger-500: oklch(57.71% 0.22 27.33);
  --mui-color-danger-600: oklch(49.79% 0.17 25.76);
  --mui-color-danger-700: oklch(43.52% 0.15 25.79);
  --mui-color-danger-800: oklch(38.63% 0.12 24.94);
  --mui-color-danger-900: oklch(34.76% 0.10 23.65);
  --mui-color-danger-950: oklch(22.87% 0.07 24.14);
}
:root {
  --mui-color-warning-50: #feffea;
  --mui-color-warning-100: #ffffc4;
  --mui-color-warning-200: #ffff84;
  --mui-color-warning-300: #fff844;
  --mui-color-warning-400: #ffec19;
  --mui-color-warning-500: #ffcd00;
  --mui-color-warning-600: #e4a000;
  --mui-color-warning-700: #c17500;
  --mui-color-warning-800: #995707;
  --mui-color-warning-900: #7e4709;
  --mui-color-warning-950: #482500;
}
:root {
  --mui-color-info-50: #f0faff;
  --mui-color-info-100: #e0f5fe;
  --mui-color-info-200: #bae8fd;
  --mui-color-info-300: #7dd5fc;
  --mui-color-info-400: #38bcf8;
  --mui-color-info-500: #0ea5e9;
  --mui-color-info-600: #028ac7;
  --mui-color-info-700: #0370a1;
  --mui-color-info-800: #075e85;
  --mui-color-info-900: #0c506e;
  --mui-color-info-950: #083549;
}
:root {
  --mui-screen-sm: 640px;
  --mui-screen-md: 768px;
  --mui-screen-lg: 1024px;
  --mui-screen-xl: 1280px;
  --mui-screen-2xl: 1536px;
}
:root {
  --mui-spacing-0_5: 0.125rem;
  --mui-spacing-1: 0.25rem;
  --mui-spacing-1_5: 0.375rem;
  --mui-spacing-2: 0.5rem;
  --mui-spacing-2_5: 0.625rem;
  --mui-spacing-3: 0.75rem;
  --mui-spacing-3_5: 0.875rem;
  --mui-spacing-4: 1rem;
  --mui-spacing-5: 1.25rem;
  --mui-spacing-6: 1.5rem;
  --mui-spacing-7: 1.75rem;
  --mui-spacing-8: 2rem;
  --mui-spacing-9: 2.25rem;
  --mui-spacing-10: 2.5rem;
  --mui-spacing-11: 2.75rem;
  --mui-spacing-12: 3rem;
  --mui-spacing-14: 3.5rem;
  --mui-spacing-16: 4rem;
  --mui-spacing-20: 5rem;
  --mui-spacing-24: 6rem;
  --mui-spacing-28: 7rem;
  --mui-spacing-32: 8rem;
  --mui-spacing-36: 9rem;
  --mui-spacing-40: 10rem;
  --mui-spacing-44: 11rem;
  --mui-spacing-48: 12rem;
  --mui-spacing-52: 13rem;
  --mui-spacing-56: 14rem;
  --mui-spacing-60: 15rem;
  --mui-spacing-64: 16rem;
  --mui-spacing-72: 18rem;
  --mui-spacing-80: 20rem;
  --mui-spacing-96: 24rem;
}
:root {
  --mui-bg-color-primary-50: var(--mui-color-primary-50);
  --mui-bg-color-primary-100: var(--mui-color-primary-100);
  --mui-bg-color-primary-200: var(--mui-color-primary-200);
  --mui-bg-color-primary-300: var(--mui-color-primary-300);
  --mui-bg-color-primary-400: var(--mui-color-primary-400);
  --mui-bg-color-primary-500: var(--mui-color-primary-500);
  --mui-bg-color-primary-600: var(--mui-color-primary-600);
  --mui-bg-color-primary-700: var(--mui-color-primary-700);
  --mui-bg-color-primary-800: var(--mui-color-primary-800);
  --mui-bg-color-primary-900: var(--mui-color-primary-900);
  --mui-bg-color-primary-950: var(--mui-color-primary-950);
}
:root {
  --mui-bg-color-secondary-50: var(--mui-color-secondary-50);
  --mui-bg-color-secondary-100: var(--mui-color-secondary-100);
  --mui-bg-color-secondary-200: var(--mui-color-secondary-200);
  --mui-bg-color-secondary-300: var(--mui-color-secondary-300);
  --mui-bg-color-secondary-400: var(--mui-color-secondary-400);
  --mui-bg-color-secondary-500: var(--mui-color-secondary-500);
  --mui-bg-color-secondary-600: var(--mui-color-secondary-600);
  --mui-bg-color-secondary-700: var(--mui-color-secondary-700);
  --mui-bg-color-secondary-800: var(--mui-color-secondary-800);
  --mui-bg-color-secondary-900: var(--mui-color-secondary-900);
  --mui-bg-color-secondary-950: var(--mui-color-secondary-950);
}
:root {
  --mui-bg-color-success-50: var(--mui-color-success-50);
  --mui-bg-color-success-100: var(--mui-color-success-100);
  --mui-bg-color-success-200: var(--mui-color-success-200);
  --mui-bg-color-success-300: var(--mui-color-success-300);
  --mui-bg-color-success-400: var(--mui-color-success-400);
  --mui-bg-color-success-500: var(--mui-color-success-500);
  --mui-bg-color-success-600: var(--mui-color-success-600);
  --mui-bg-color-success-700: var(--mui-color-success-700);
  --mui-bg-color-success-800: var(--mui-color-success-800);
  --mui-bg-color-success-900: var(--mui-color-success-900);
  --mui-bg-color-success-950: var(--mui-color-success-950);
}
:root {
  --mui-bg-color-danger-50: var(--mui-color-danger-50);
  --mui-bg-color-danger-100: var(--mui-color-danger-100);
  --mui-bg-color-danger-200: var(--mui-color-danger-200);
  --mui-bg-color-danger-300: var(--mui-color-danger-300);
  --mui-bg-color-danger-400: var(--mui-color-danger-400);
  --mui-bg-color-danger-500: var(--mui-color-danger-500);
  --mui-bg-color-danger-600: var(--mui-color-danger-600);
  --mui-bg-color-danger-700: var(--mui-color-danger-700);
  --mui-bg-color-danger-800: var(--mui-color-danger-800);
  --mui-bg-color-danger-900: var(--mui-color-danger-900);
  --mui-bg-color-danger-950: var(--mui-color-danger-950);
}
:root {
  --mui-bg-color-warning-50: var(--mui-color-warning-50);
  --mui-bg-color-warning-100: var(--mui-color-warning-100);
  --mui-bg-color-warning-200: var(--mui-color-warning-200);
  --mui-bg-color-warning-300: var(--mui-color-warning-300);
  --mui-bg-color-warning-400: var(--mui-color-warning-400);
  --mui-bg-color-warning-500: var(--mui-color-warning-500);
  --mui-bg-color-warning-600: var(--mui-color-warning-600);
  --mui-bg-color-warning-700: var(--mui-color-warning-700);
  --mui-bg-color-warning-800: var(--mui-color-warning-800);
  --mui-bg-color-warning-900: var(--mui-color-warning-900);
  --mui-bg-color-warning-950: var(--mui-color-warning-950);
}
:root {
  --mui-bg-color-info-50: var(--mui-color-info-50);
  --mui-bg-color-info-100: var(--mui-color-info-100);
  --mui-bg-color-info-200: var(--mui-color-info-200);
  --mui-bg-color-info-300: var(--mui-color-info-300);
  --mui-bg-color-info-400: var(--mui-color-info-400);
  --mui-bg-color-info-500: var(--mui-color-info-500);
  --mui-bg-color-info-600: var(--mui-color-info-600);
  --mui-bg-color-info-700: var(--mui-color-info-700);
  --mui-bg-color-info-800: var(--mui-color-info-800);
  --mui-bg-color-info-900: var(--mui-color-info-900);
  --mui-bg-color-info-950: var(--mui-color-info-950);
}
:root {
  --mui-border-color-primary-50: var(--mui-color-primary-50);
  --mui-border-color-primary-100: var(--mui-color-primary-100);
  --mui-border-color-primary-200: var(--mui-color-primary-200);
  --mui-border-color-primary-300: var(--mui-color-primary-300);
  --mui-border-color-primary-400: var(--mui-color-primary-400);
  --mui-border-color-primary-500: var(--mui-color-primary-500);
  --mui-border-color-primary-600: var(--mui-color-primary-600);
  --mui-border-color-primary-700: var(--mui-color-primary-700);
  --mui-border-color-primary-800: var(--mui-color-primary-800);
  --mui-border-color-primary-900: var(--mui-color-primary-900);
  --mui-border-color-primary-950: var(--mui-color-primary-950);
}
:root {
  --mui-border-color-secondary-50: var(--mui-color-secondary-50);
  --mui-border-color-secondary-100: var(--mui-color-secondary-100);
  --mui-border-color-secondary-200: var(--mui-color-secondary-200);
  --mui-border-color-secondary-300: var(--mui-color-secondary-300);
  --mui-border-color-secondary-400: var(--mui-color-secondary-400);
  --mui-border-color-secondary-500: var(--mui-color-secondary-500);
  --mui-border-color-secondary-600: var(--mui-color-secondary-600);
  --mui-border-color-secondary-700: var(--mui-color-secondary-700);
  --mui-border-color-secondary-800: var(--mui-color-secondary-800);
  --mui-border-color-secondary-900: var(--mui-color-secondary-900);
  --mui-border-color-secondary-950: var(--mui-color-secondary-950);
}
:root {
  --mui-border-color-success-50: var(--mui-color-success-50);
  --mui-border-color-success-100: var(--mui-color-success-100);
  --mui-border-color-success-200: var(--mui-color-success-200);
  --mui-border-color-success-300: var(--mui-color-success-300);
  --mui-border-color-success-400: var(--mui-color-success-400);
  --mui-border-color-success-500: var(--mui-color-success-500);
  --mui-border-color-success-600: var(--mui-color-success-600);
  --mui-border-color-success-700: var(--mui-color-success-700);
  --mui-border-color-success-800: var(--mui-color-success-800);
  --mui-border-color-success-900: var(--mui-color-success-900);
  --mui-border-color-success-950: var(--mui-color-success-950);
}
:root {
  --mui-border-color-warning-50: var(--mui-color-warning-50);
  --mui-border-color-warning-100: var(--mui-color-warning-100);
  --mui-border-color-warning-200: var(--mui-color-warning-200);
  --mui-border-color-warning-300: var(--mui-color-warning-300);
  --mui-border-color-warning-400: var(--mui-color-warning-400);
  --mui-border-color-warning-500: var(--mui-color-warning-500);
  --mui-border-color-warning-600: var(--mui-color-warning-600);
  --mui-border-color-warning-700: var(--mui-color-warning-700);
  --mui-border-color-warning-800: var(--mui-color-warning-800);
  --mui-border-color-warning-900: var(--mui-color-warning-900);
  --mui-border-color-warning-950: var(--mui-color-warning-950);
}
:root {
  --mui-border-color-danger-50: var(--mui-color-danger-50);
  --mui-border-color-danger-100: var(--mui-color-danger-100);
  --mui-border-color-danger-200: var(--mui-color-danger-200);
  --mui-border-color-danger-300: var(--mui-color-danger-300);
  --mui-border-color-danger-400: var(--mui-color-danger-400);
  --mui-border-color-danger-500: var(--mui-color-danger-500);
  --mui-border-color-danger-600: var(--mui-color-danger-600);
  --mui-border-color-danger-700: var(--mui-color-danger-700);
  --mui-border-color-danger-800: var(--mui-color-danger-800);
  --mui-border-color-danger-900: var(--mui-color-danger-900);
  --mui-border-color-danger-950: var(--mui-color-danger-950);
}
:root {
  --mui-border-color-info-50: var(--mui-color-info-50);
  --mui-border-color-info-100: var(--mui-color-info-100);
  --mui-border-color-info-200: var(--mui-color-info-200);
  --mui-border-color-info-300: var(--mui-color-info-300);
  --mui-border-color-info-400: var(--mui-color-info-400);
  --mui-border-color-info-500: var(--mui-color-info-500);
  --mui-border-color-info-600: var(--mui-color-info-600);
  --mui-border-color-info-700: var(--mui-color-info-700);
  --mui-border-color-info-800: var(--mui-color-info-800);
  --mui-border-color-info-900: var(--mui-color-info-900);
  --mui-border-color-info-950: var(--mui-color-info-950);
}
:root {
  --mui-border-radius-xs: 0.06rem;
  --mui-border-radius-sm: 0.125rem;
  --mui-border-radius: 0.25rem;
  --mui-border-radius-md: 0.375rem;
  --mui-border-radius-lg: 0.5rem;
  --mui-border-radius-xl: 0.75rem;
  --mui-border-radius-2xl: 1rem;
  --mui-border-radius-3xl: 1.5rem;
}
:root {
  --mui-border-width-0: 0px;
  --mui-border-width: 1px;
  --mui-border-width-2: 2px;
  --mui-border-width-4: 4px;
  --mui-border-width-8: 8px;
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-content: "";
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
    }
  }
}
